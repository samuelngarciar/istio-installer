name: Istio installer and addons
on:
  push:
    branches: [main]

permissions:
  contents: read
  issues: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker
        run: |
          echo "${{ secrets.KUBECONFIG }}" > ./config
          export KUBECONFIG=$(pwd)/config
          echo $KUBECONFIG
          echo "1- CREATE THE NS istio-system"
          kubectl create namespace istio-system
          
          echo "2- INSTALL THE REPO OF ISTIO CHARTS"
          helm repo add istio https://istio-release.storage.googleapis.com/charts
          helm repo update

          echo "3- INSTALL THE ISTIO BASE"
          helm install istio-base istio/base --version 1.25.0 -n istio-system

          echo "4- INSTALL THE DISCOVERY"
          helm install istiod istio/istiod --version 1.25.0 -n istio-system --wait

          echo "5- DOWNLOAD ISTIO BINARY"
          curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.25.0 sh -
          cd istio-1.25.0
          export PATH=$PWD/bin:$PATH

          echo "6- INSTALL ADDONS"
          kubectl apply -f samples/addons
          kubectl rollout status deployment/kiali -n istio-system

          echo "7- ENABLE JAEGER SETTINGS"
          istioctl install -f ../extension-provider-jaeger.yml --skip-confirmation
          kubectl apply -f ../enable-trace-jaeger.yml

          echo "8- ENABLE ISTIO IN DEFAULT NAMESPACE"
          kubectl label namespace default istio-injection=enabled
          
          echo "9- DEPLOY TEST SERVICE"
          cd ..
          git clone https://github.com/GoogleCloudPlatform/microservices-demo.git
          cd microservices-demo
          kubectl apply -f ./release/kubernetes-manifests.yaml

          echo "10- CREATE VIRTUAL SERVICE"
          kubectl apply -f ../virtual-service-example.yml

          echo "11- CREATE GATEWAY"
          kubectl apply -f ../gateway-example.yaml

          echo "12- EXPOSE KIALI AND JAEGER"
          kubectl expose deployment kiali --port=80 --target-port=20001 --type=LoadBalancer --name lb-kiali -n istio-system
          kubectl expose deployment jaeger --port=80 --target-port=16686 --type=LoadBalancer --name lb-jaeger -n istio-system

          echo "13- CREATE NAMESPACE 'develop'  and  'test'"
          kubectl create ns develop
          kubectl create ns test

          echo "14- SET ISTIO LABEL NAMESPACE 'develop'  and  'test'"
          kubectl label namespace develop istio-injection=enabled
          kubectl label namespace test istio-injection=enabled

          echo "15- WAIT 183 seg"
          sleep 183

          echo "16- CHECK ALL SERVICES"
          kubectl get svc --all-namespaces

          echo "17- CHECK ALL PODS"
          kubectl get pod --all-namespaces